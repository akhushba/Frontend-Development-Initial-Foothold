

/* universal selector, selects everything 
* {
    border: 1px solid green;
   border around every element
}

body {
    border: 1px dashed blue;
    single border around body 
}
*/

/* attribute selector 

input{} is for all inputs (checkboxes may look weird/different tho)
a[href="wiki"]{} any url which is exactly wiki
a[href*="wiki"]{} any url containing wiki
a[href^="#"]{} any url starting with #
a[href$=".org"]{} any url ends with .org

*/
/* for <input type="number"> */
input[type="number"]{
    background-color: aliceblue;
}

/* multiple with same stuff? just combine them with a comma (elements, attributes, etc) */
h1, h2, h3 {
    color: darkslategrey;
}

/* child class, all spans in li can also do ul, or #cast (BEST OPTION)
can do 

#cast li span{} child hierarchy for specifcs
*/
li span{
    color: darkcyan;
}
/* only li's that are direct children of ol, not all li children (grandchildren, etc) */
ol > li {
    border: 1px solid red;
}

/* compound selector
score nested in h2 
remember if you classify it as class = "score big" it is two different classes: score and big 
.score.big{} requires element to have both classes
*/
h2.score{
    border: 1px dashed gold;
}

/* boxes */
#firstHead {
    /* OR */
    border: 2px solid olivedrab;
    width: fit-content;
    /* width: 500px; */
    /* or if you're using divs, 
    you can set measurements to be percantage of parent div */
    /* height: 60px; */
    /* padding-top: 20px;
    padding-bottom: 20px;
    padding-left: 200px;
    padding-right: 200px; */
    padding: 20px;
    /* padding: top right bottom left;
       padding: top/bottom left/right;
    or percentage of container 
    
    THIS WAY ADDS TO THE DIMENSIONS
    ALTERNATE WAY;
    border box subtracts from width and hieght
    box-sizing: border-box;
    */
}
/* for inline elements, can change it to behave like block element 
display: inline vs display: block
*/
#border span {
    border: 2px solid darkcyan;
    padding: 20px;
    margin: 30px;
}
/* 
Block
    - breaks onto new line
    - width and height are respected
    - padding, margin, border will cause other lelements to be pushed
    - box extends in teh inline direction to fill available space in container unless styled otherwise 
In-Line
    - Box doesn't break onto new line
    - width and height don't apply
    - vertical padding, margin, borders apply but don't cause other inline elements to move away from box
    - horizontal padding, margin, borders will apply and cause other boxes to move away
In-Line Block
    - hybrid of inline and block
    - box doesn't break into new line
    - wdith and height are respected
    - padding, margin, border will cause other lelements to be pushed away from the box
None
    - makes element invisible
    - useful for animations if hiding certain feeatures at certain sizes for instance (changing from laptop screen to phone screen)
*/
#border .imagesMaybe{
    border: 2px solid darkturquoise;
    width: 200px;
    height: 200px;
    /* rn default block, will be stacked on top of each other */
    display: inline;
    /* width/hieght not respected */
    display: inline-block;
    /* now they're side by side */

    /* 
    Margins
    auto margin centers entire element horizontally
    magins collapse automatically, they don't add to each other 
        - absolute of margin value will be the margin between two elements
        - only a conccern with the flow model, with flexbox and grids we'll be able to change this
        - inline-block thinsg may be a bit different

    margins are contained in diivs, will have div margins horizontally anyway, vertical?
    */
}

#box {
    background-color: turquoise;
    /* width: 60%;
    min-width: 300px;
    max-width: 500px;
    height: 200px;
    margin: 0 auto; */
    height: 100px;
    width: 100px;
    background-color: rgb(0, 128, 128);
    /* border-radius: 40%; */
    /* 0-50% max, can also do pixels, to do all four corners just sepcify four in sequence */
    /* border-radius: 40% 20% 0% 50%;
    box-shadow: 5px 5px 5px rgba(0, 128, 128, 0.449); */
    /* x offset, y offset, blur radius, colour 
    can keep stacking box-shadows using commas and more specs
    */
    overflow: scroll;
}